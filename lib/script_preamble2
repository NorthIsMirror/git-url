#!/bin/bash
# -*- mode: shell-script -*-
# vim:ft=sh

GITURL_TOOL=${GITURL_TOOL#"${GITURL_TOOL%%[![:space:]]*}"} # leading white space
GITURL_TOOL=${GITURL_TOOL%"${GITURL_TOOL##*[![:space:]]}"} # trailing white space

RESET="\033[m"
BOLD="\033[1m"
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
MAGENTA="\033[35m"
CYAN="\033[36m"
BOLD_RED="\033[1;31m"
BOLD_GREEN="\033[1;32m"
BOLD_YELLOW="\033[1;33m"
BOLD_BLUE="\033[1;34m"
BOLD_MAGENTA="\033[1;35m"
BOLD_CYAN="\033[1;36m"
BG_RED="\033[41m"
BG_GREEN="\033[42m"
BG_YELLOW="\033[43m"
BG_BLUE="\033[44m"
BG_MAGENTA="\033[45m"
BG_CYAN="\033[46m"

#
# Functions
#

show_help() {
    echo "git uclone [regular clone options] gitu://...gcode... [target directory]"
    echo ""
    echo "git uclone will decode the git-url, then do normal clone, and then checkout the encoded"
    echo "revision. It will also display information on any encoded paths."
    echo ""
    echo "git uclone recognizes also //...gcode... and ...gcode... syntaxes (gitu:// is optional, etc.)."
    echo "However, when passing the target directory, then at least // prefix is required (or gitu://)."
}

#
# Parse options
# Actually pass through them for regular clone
#

if [[ "$1" = "-h" || "$#" -eq 0 ]]; then
    show_help
    exit 0
fi
